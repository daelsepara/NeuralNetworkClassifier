
// This file has been generated by the GUI designer. Do not modify.

public partial class MainWindow
{
	private global::Gtk.UIManager UIManager;

	private global::Gtk.Action AboutButton;

	private global::Gtk.Action QuitButton;

	private global::Gtk.Action StartButton;

	private global::Gtk.Action StopButton;

	private global::Gtk.Action ResetButton;

	private global::Gtk.Action ClassifyButton;

	private global::Gtk.Action LoadNetworkButton;

	private global::Gtk.Action PlotButton;

	private global::Gtk.Action SavePlotButton;

	private global::Gtk.Fixed MainLayout;

	private global::Gtk.Toolbar MainToolbar;

	private global::Gtk.Notebook MainNotebook;

	private global::Gtk.Fixed LayoutPageData;

	private global::Gtk.Label LabelTrainingSet;

	private global::Gtk.Entry TrainingSet;

	private global::Gtk.Button OpenTrainingSet;

	private global::Gtk.Label LabelTestSet;

	private global::Gtk.Entry TestSet;

	private global::Gtk.Button OpenTestSet;

	private global::Gtk.ScrolledWindow WindowTrainingSet;

	private global::Gtk.TextView DataTrainingSet;

	private global::Gtk.ScrolledWindow WindowTestSet;

	private global::Gtk.TextView DataTestSet;

	private global::Gtk.Button ReloadTrainingSet;

	private global::Gtk.Button ReloadTestSet;

	private global::Gtk.Label LabelDelimeter;

	private global::Gtk.ComboBox DelimiterBox;

	private global::Gtk.Label LabelInputNodes;

	private global::Gtk.SpinButton InputLayerNodes;

	private global::Gtk.Label LabelCategories;

	private global::Gtk.SpinButton Categories;

	private global::Gtk.Label LabelExamples;

	private global::Gtk.SpinButton Examples;

	private global::Gtk.Label LabelSamples;

	private global::Gtk.SpinButton Samples;

	private global::Gtk.Label LabelPageData;

	private global::Gtk.Fixed LayoutPageTraining;

	private global::Gtk.Label LabelLearnRate;

	private global::Gtk.SpinButton LearningRate;

	private global::Gtk.Label LabelHiddenLayerNodes;

	private global::Gtk.SpinButton HiddenLayerNodes;

	private global::Gtk.Label LabelEpochs;

	private global::Gtk.SpinButton Epochs;

	private global::Gtk.Label LabelTraining;

	private global::Gtk.ProgressBar TrainingProgress;

	private global::Gtk.Toolbar TrainingToolbar;

	private global::Gtk.Label LabelClassification;

	private global::Gtk.ScrolledWindow ClassificationWindow;

	private global::Gtk.TextView Classification;

	private global::Gtk.Label LabelTolerance;

	private global::Gtk.SpinButton Tolerance;

	private global::Gtk.Label LabelIterations;

	private global::Gtk.Entry Iterations;

	private global::Gtk.Label LabelErrorCost;

	private global::Gtk.Entry ErrorCost;

	private global::Gtk.Toolbar ClassifyToolbar;

	private global::Gtk.Label LabelThreshold;

	private global::Gtk.SpinButton Threshold;

	private global::Gtk.Label LabelClassify;

	private global::Gtk.CheckButton UseOptimizer;

	private global::Gtk.Label LabelPageTraining;

	private global::Gtk.Fixed LayoutPageNetwork;

	private global::Gtk.Label LabelWJI;

	private global::Gtk.ScrolledWindow WJIWindow;

	private global::Gtk.TextView WJIView;

	private global::Gtk.Entry WJIFile;

	private global::Gtk.Button OpenWJIButton;

	private global::Gtk.Button SaveWJIButton;

	private global::Gtk.ScrolledWindow WKJWindow;

	private global::Gtk.TextView WKJView;

	private global::Gtk.Entry WKJFile;

	private global::Gtk.Button OpenWKJButton;

	private global::Gtk.Button SaveWKJButton;

	private global::Gtk.Label LabelWKJ;

	private global::Gtk.Toolbar LoadNetworkToolbar;

	private global::Gtk.Label LabelLoadNetwork;

	private global::Gtk.Label LabelNormalization;

	private global::Gtk.Entry NormalizationFile;

	private global::Gtk.ScrolledWindow NormalizationWindow;

	private global::Gtk.TextView Normalization;

	private global::Gtk.Button OpenNormalization;

	private global::Gtk.Button SaveNormalization;

	private global::Gtk.Label LabelPageNetwork;

	private global::Gtk.Fixed LayoutPagePlot;

	private global::Gtk.Image PlotImage;

	private global::Gtk.Label LabelPlotType;

	private global::Gtk.ComboBox PlotType;

	private global::Gtk.Label LabelX;

	private global::Gtk.SpinButton Feature1;

	private global::Gtk.Label LabelY;

	private global::Gtk.SpinButton Feature2;

	private global::Gtk.Toolbar PlotToolbar;

	private global::Gtk.Label LabelPagePlot;

	private global::Gtk.Fixed LayoutPageAbout;

	private global::Gtk.Image ANNArchitecture;

	private global::Gtk.ScrolledWindow CreditsWindow;

	private global::Gtk.TextView Credits;

	private global::Gtk.Label LabelCredits;

	private global::Gtk.Label LabelAbout;

	private global::Gtk.ScrolledWindow AboutWindow;

	private global::Gtk.TextView textview2;

	private global::Gtk.Label LabelPageAbout;

	protected virtual void Build()
	{
		global::Stetic.Gui.Initialize(this);
		// Widget MainWindow
		this.UIManager = new global::Gtk.UIManager();
		global::Gtk.ActionGroup w1 = new global::Gtk.ActionGroup("Default");
		this.AboutButton = new global::Gtk.Action("AboutButton", null, global::Mono.Unix.Catalog.GetString("About Neural Network Classifier"), "gtk-info");
		w1.Add(this.AboutButton, null);
		this.QuitButton = new global::Gtk.Action("QuitButton", null, global::Mono.Unix.Catalog.GetString("Exit Neural Network Classifier"), "gtk-quit");
		w1.Add(this.QuitButton, null);
		this.StartButton = new global::Gtk.Action("StartButton", null, global::Mono.Unix.Catalog.GetString("Start training neural network classifier"), "gtk-media-play");
		w1.Add(this.StartButton, null);
		this.StopButton = new global::Gtk.Action("StopButton", null, global::Mono.Unix.Catalog.GetString("Pause training"), "gtk-media-stop");
		w1.Add(this.StopButton, null);
		this.ResetButton = new global::Gtk.Action("ResetButton", null, global::Mono.Unix.Catalog.GetString("Reset network parameters"), "gtk-refresh");
		w1.Add(this.ResetButton, null);
		this.ClassifyButton = new global::Gtk.Action("ClassifyButton", null, global::Mono.Unix.Catalog.GetString("Classify"), "gtk-media-play");
		w1.Add(this.ClassifyButton, null);
		this.LoadNetworkButton = new global::Gtk.Action("LoadNetworkButton", null, global::Mono.Unix.Catalog.GetString("Load weights into network"), "gtk-properties");
		w1.Add(this.LoadNetworkButton, null);
		this.PlotButton = new global::Gtk.Action("PlotButton", null, global::Mono.Unix.Catalog.GetString("Plot"), "gtk-media-play");
		w1.Add(this.PlotButton, null);
		this.SavePlotButton = new global::Gtk.Action("SavePlotButton", null, global::Mono.Unix.Catalog.GetString("Save plot as image"), "gtk-save");
		w1.Add(this.SavePlotButton, null);
		this.UIManager.InsertActionGroup(w1, 0);
		this.AddAccelGroup(this.UIManager.AccelGroup);
		this.WidthRequest = 800;
		this.HeightRequest = 600;
		this.Name = "MainWindow";
		this.Title = global::Mono.Unix.Catalog.GetString("MainWindow");
		this.Icon = global::Gdk.Pixbuf.LoadFromResource("NeuralNetworkClassifier.network.png");
		this.WindowPosition = ((global::Gtk.WindowPosition)(3));
		this.Resizable = false;
		this.DefaultWidth = 800;
		this.DefaultHeight = 600;
		// Container child MainWindow.Gtk.Container+ContainerChild
		this.MainLayout = new global::Gtk.Fixed();
		this.MainLayout.WidthRequest = 800;
		this.MainLayout.HeightRequest = 600;
		this.MainLayout.Name = "MainLayout";
		this.MainLayout.HasWindow = false;
		// Container child MainLayout.Gtk.Fixed+FixedChild
		this.UIManager.AddUiFromString("<ui><toolbar name=\'MainToolbar\'><toolitem name=\'AboutButton\' action=\'AboutButton\'" +
				"/><toolitem name=\'QuitButton\' action=\'QuitButton\'/></toolbar></ui>");
		this.MainToolbar = ((global::Gtk.Toolbar)(this.UIManager.GetWidget("/MainToolbar")));
		this.MainToolbar.Name = "MainToolbar";
		this.MainToolbar.ShowArrow = false;
		this.MainToolbar.ToolbarStyle = ((global::Gtk.ToolbarStyle)(0));
		this.MainLayout.Add(this.MainToolbar);
		global::Gtk.Fixed.FixedChild w2 = ((global::Gtk.Fixed.FixedChild)(this.MainLayout[this.MainToolbar]));
		w2.X = 40;
		w2.Y = 10;
		// Container child MainLayout.Gtk.Fixed+FixedChild
		this.MainNotebook = new global::Gtk.Notebook();
		this.MainNotebook.WidthRequest = 720;
		this.MainNotebook.HeightRequest = 490;
		this.MainNotebook.CanFocus = true;
		this.MainNotebook.Name = "MainNotebook";
		this.MainNotebook.CurrentPage = 0;
		// Container child MainNotebook.Gtk.Notebook+NotebookChild
		this.LayoutPageData = new global::Gtk.Fixed();
		this.LayoutPageData.Name = "LayoutPageData";
		this.LayoutPageData.HasWindow = false;
		// Container child LayoutPageData.Gtk.Fixed+FixedChild
		this.LabelTrainingSet = new global::Gtk.Label();
		this.LabelTrainingSet.Name = "LabelTrainingSet";
		this.LabelTrainingSet.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Training set</b>");
		this.LabelTrainingSet.UseMarkup = true;
		this.LayoutPageData.Add(this.LabelTrainingSet);
		global::Gtk.Fixed.FixedChild w3 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageData[this.LabelTrainingSet]));
		w3.X = 20;
		w3.Y = 20;
		// Container child LayoutPageData.Gtk.Fixed+FixedChild
		this.TrainingSet = new global::Gtk.Entry();
		this.TrainingSet.WidthRequest = 400;
		this.TrainingSet.Name = "TrainingSet";
		this.TrainingSet.IsEditable = false;
		this.TrainingSet.InvisibleChar = 'â€¢';
		this.LayoutPageData.Add(this.TrainingSet);
		global::Gtk.Fixed.FixedChild w4 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageData[this.TrainingSet]));
		w4.X = 20;
		w4.Y = 40;
		// Container child LayoutPageData.Gtk.Fixed+FixedChild
		this.OpenTrainingSet = new global::Gtk.Button();
		this.OpenTrainingSet.CanFocus = true;
		this.OpenTrainingSet.Name = "OpenTrainingSet";
		this.OpenTrainingSet.FocusOnClick = false;
		global::Gtk.Image w5 = new global::Gtk.Image();
		w5.Pixbuf = global::Stetic.IconLoader.LoadIcon(this, "gtk-open", global::Gtk.IconSize.Menu);
		this.OpenTrainingSet.Image = w5;
		this.LayoutPageData.Add(this.OpenTrainingSet);
		global::Gtk.Fixed.FixedChild w6 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageData[this.OpenTrainingSet]));
		w6.X = 425;
		w6.Y = 40;
		// Container child LayoutPageData.Gtk.Fixed+FixedChild
		this.LabelTestSet = new global::Gtk.Label();
		this.LabelTestSet.Name = "LabelTestSet";
		this.LabelTestSet.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Test set</b>");
		this.LabelTestSet.UseMarkup = true;
		this.LayoutPageData.Add(this.LabelTestSet);
		global::Gtk.Fixed.FixedChild w7 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageData[this.LabelTestSet]));
		w7.X = 20;
		w7.Y = 230;
		// Container child LayoutPageData.Gtk.Fixed+FixedChild
		this.TestSet = new global::Gtk.Entry();
		this.TestSet.WidthRequest = 400;
		this.TestSet.Name = "TestSet";
		this.TestSet.IsEditable = false;
		this.TestSet.InvisibleChar = 'â€¢';
		this.LayoutPageData.Add(this.TestSet);
		global::Gtk.Fixed.FixedChild w8 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageData[this.TestSet]));
		w8.X = 20;
		w8.Y = 250;
		// Container child LayoutPageData.Gtk.Fixed+FixedChild
		this.OpenTestSet = new global::Gtk.Button();
		this.OpenTestSet.CanFocus = true;
		this.OpenTestSet.Name = "OpenTestSet";
		this.OpenTestSet.FocusOnClick = false;
		global::Gtk.Image w9 = new global::Gtk.Image();
		w9.Pixbuf = global::Stetic.IconLoader.LoadIcon(this, "gtk-open", global::Gtk.IconSize.Menu);
		this.OpenTestSet.Image = w9;
		this.LayoutPageData.Add(this.OpenTestSet);
		global::Gtk.Fixed.FixedChild w10 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageData[this.OpenTestSet]));
		w10.X = 425;
		w10.Y = 250;
		// Container child LayoutPageData.Gtk.Fixed+FixedChild
		this.WindowTrainingSet = new global::Gtk.ScrolledWindow();
		this.WindowTrainingSet.WidthRequest = 400;
		this.WindowTrainingSet.HeightRequest = 140;
		this.WindowTrainingSet.Name = "WindowTrainingSet";
		this.WindowTrainingSet.ShadowType = ((global::Gtk.ShadowType)(1));
		// Container child WindowTrainingSet.Gtk.Container+ContainerChild
		this.DataTrainingSet = new global::Gtk.TextView();
		this.DataTrainingSet.CanFocus = true;
		this.DataTrainingSet.Name = "DataTrainingSet";
		this.DataTrainingSet.AcceptsTab = false;
		this.WindowTrainingSet.Add(this.DataTrainingSet);
		this.LayoutPageData.Add(this.WindowTrainingSet);
		global::Gtk.Fixed.FixedChild w12 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageData[this.WindowTrainingSet]));
		w12.X = 20;
		w12.Y = 80;
		// Container child LayoutPageData.Gtk.Fixed+FixedChild
		this.WindowTestSet = new global::Gtk.ScrolledWindow();
		this.WindowTestSet.WidthRequest = 400;
		this.WindowTestSet.HeightRequest = 140;
		this.WindowTestSet.Name = "WindowTestSet";
		this.WindowTestSet.ShadowType = ((global::Gtk.ShadowType)(1));
		// Container child WindowTestSet.Gtk.Container+ContainerChild
		this.DataTestSet = new global::Gtk.TextView();
		this.DataTestSet.CanFocus = true;
		this.DataTestSet.Name = "DataTestSet";
		this.WindowTestSet.Add(this.DataTestSet);
		this.LayoutPageData.Add(this.WindowTestSet);
		global::Gtk.Fixed.FixedChild w14 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageData[this.WindowTestSet]));
		w14.X = 20;
		w14.Y = 290;
		// Container child LayoutPageData.Gtk.Fixed+FixedChild
		this.ReloadTrainingSet = new global::Gtk.Button();
		this.ReloadTrainingSet.CanFocus = true;
		this.ReloadTrainingSet.Name = "ReloadTrainingSet";
		this.ReloadTrainingSet.FocusOnClick = false;
		global::Gtk.Image w15 = new global::Gtk.Image();
		w15.Pixbuf = global::Stetic.IconLoader.LoadIcon(this, "gtk-refresh", global::Gtk.IconSize.Menu);
		this.ReloadTrainingSet.Image = w15;
		this.LayoutPageData.Add(this.ReloadTrainingSet);
		global::Gtk.Fixed.FixedChild w16 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageData[this.ReloadTrainingSet]));
		w16.X = 460;
		w16.Y = 40;
		// Container child LayoutPageData.Gtk.Fixed+FixedChild
		this.ReloadTestSet = new global::Gtk.Button();
		this.ReloadTestSet.CanFocus = true;
		this.ReloadTestSet.Name = "ReloadTestSet";
		this.ReloadTestSet.FocusOnClick = false;
		global::Gtk.Image w17 = new global::Gtk.Image();
		w17.Pixbuf = global::Stetic.IconLoader.LoadIcon(this, "gtk-refresh", global::Gtk.IconSize.Menu);
		this.ReloadTestSet.Image = w17;
		this.LayoutPageData.Add(this.ReloadTestSet);
		global::Gtk.Fixed.FixedChild w18 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageData[this.ReloadTestSet]));
		w18.X = 460;
		w18.Y = 250;
		// Container child LayoutPageData.Gtk.Fixed+FixedChild
		this.LabelDelimeter = new global::Gtk.Label();
		this.LabelDelimeter.Name = "LabelDelimeter";
		this.LabelDelimeter.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Delimiter</b>");
		this.LabelDelimeter.UseMarkup = true;
		this.LayoutPageData.Add(this.LabelDelimeter);
		global::Gtk.Fixed.FixedChild w19 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageData[this.LabelDelimeter]));
		w19.X = 520;
		w19.Y = 20;
		// Container child LayoutPageData.Gtk.Fixed+FixedChild
		this.DelimiterBox = global::Gtk.ComboBox.NewText();
		this.DelimiterBox.WidthRequest = 150;
		this.DelimiterBox.Name = "DelimiterBox";
		this.LayoutPageData.Add(this.DelimiterBox);
		global::Gtk.Fixed.FixedChild w20 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageData[this.DelimiterBox]));
		w20.X = 520;
		w20.Y = 40;
		// Container child LayoutPageData.Gtk.Fixed+FixedChild
		this.LabelInputNodes = new global::Gtk.Label();
		this.LabelInputNodes.Name = "LabelInputNodes";
		this.LabelInputNodes.LabelProp = global::Mono.Unix.Catalog.GetString("<b># of Input Layer Nodes</b>");
		this.LabelInputNodes.UseMarkup = true;
		this.LayoutPageData.Add(this.LabelInputNodes);
		global::Gtk.Fixed.FixedChild w21 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageData[this.LabelInputNodes]));
		w21.X = 520;
		w21.Y = 80;
		// Container child LayoutPageData.Gtk.Fixed+FixedChild
		this.InputLayerNodes = new global::Gtk.SpinButton(1D, 100D, 1D);
		this.InputLayerNodes.WidthRequest = 150;
		this.InputLayerNodes.Name = "InputLayerNodes";
		this.InputLayerNodes.Adjustment.PageIncrement = 10D;
		this.InputLayerNodes.ClimbRate = 1D;
		this.InputLayerNodes.Numeric = true;
		this.InputLayerNodes.Value = 1D;
		this.LayoutPageData.Add(this.InputLayerNodes);
		global::Gtk.Fixed.FixedChild w22 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageData[this.InputLayerNodes]));
		w22.X = 520;
		w22.Y = 110;
		// Container child LayoutPageData.Gtk.Fixed+FixedChild
		this.LabelCategories = new global::Gtk.Label();
		this.LabelCategories.Name = "LabelCategories";
		this.LabelCategories.LabelProp = global::Mono.Unix.Catalog.GetString("<b># of Categories</b>");
		this.LabelCategories.UseMarkup = true;
		this.LayoutPageData.Add(this.LabelCategories);
		global::Gtk.Fixed.FixedChild w23 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageData[this.LabelCategories]));
		w23.X = 520;
		w23.Y = 150;
		// Container child LayoutPageData.Gtk.Fixed+FixedChild
		this.Categories = new global::Gtk.SpinButton(1D, 100D, 1D);
		this.Categories.WidthRequest = 150;
		this.Categories.Name = "Categories";
		this.Categories.Adjustment.PageIncrement = 10D;
		this.Categories.ClimbRate = 1D;
		this.Categories.Numeric = true;
		this.Categories.Value = 1D;
		this.LayoutPageData.Add(this.Categories);
		global::Gtk.Fixed.FixedChild w24 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageData[this.Categories]));
		w24.X = 520;
		w24.Y = 180;
		// Container child LayoutPageData.Gtk.Fixed+FixedChild
		this.LabelExamples = new global::Gtk.Label();
		this.LabelExamples.Name = "LabelExamples";
		this.LabelExamples.LabelProp = global::Mono.Unix.Catalog.GetString("<b># of Training examples</b>");
		this.LabelExamples.UseMarkup = true;
		this.LayoutPageData.Add(this.LabelExamples);
		global::Gtk.Fixed.FixedChild w25 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageData[this.LabelExamples]));
		w25.X = 520;
		w25.Y = 220;
		// Container child LayoutPageData.Gtk.Fixed+FixedChild
		this.Examples = new global::Gtk.SpinButton(0D, 100000D, 1D);
		this.Examples.WidthRequest = 150;
		this.Examples.Name = "Examples";
		this.Examples.Adjustment.PageIncrement = 100D;
		this.Examples.ClimbRate = 1D;
		this.Examples.Numeric = true;
		this.LayoutPageData.Add(this.Examples);
		global::Gtk.Fixed.FixedChild w26 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageData[this.Examples]));
		w26.X = 520;
		w26.Y = 250;
		// Container child LayoutPageData.Gtk.Fixed+FixedChild
		this.LabelSamples = new global::Gtk.Label();
		this.LabelSamples.Name = "LabelSamples";
		this.LabelSamples.LabelProp = global::Mono.Unix.Catalog.GetString("<b># of Test Samples</b>");
		this.LabelSamples.UseMarkup = true;
		this.LayoutPageData.Add(this.LabelSamples);
		global::Gtk.Fixed.FixedChild w27 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageData[this.LabelSamples]));
		w27.X = 520;
		w27.Y = 290;
		// Container child LayoutPageData.Gtk.Fixed+FixedChild
		this.Samples = new global::Gtk.SpinButton(0D, 100000D, 1D);
		this.Samples.WidthRequest = 150;
		this.Samples.Name = "Samples";
		this.Samples.Adjustment.PageIncrement = 100D;
		this.Samples.ClimbRate = 1D;
		this.Samples.Numeric = true;
		this.LayoutPageData.Add(this.Samples);
		global::Gtk.Fixed.FixedChild w28 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageData[this.Samples]));
		w28.X = 520;
		w28.Y = 320;
		this.MainNotebook.Add(this.LayoutPageData);
		// Notebook tab
		this.LabelPageData = new global::Gtk.Label();
		this.LabelPageData.Name = "LabelPageData";
		this.LabelPageData.LabelProp = global::Mono.Unix.Catalog.GetString("Data");
		this.MainNotebook.SetTabLabel(this.LayoutPageData, this.LabelPageData);
		this.LabelPageData.ShowAll();
		// Container child MainNotebook.Gtk.Notebook+NotebookChild
		this.LayoutPageTraining = new global::Gtk.Fixed();
		this.LayoutPageTraining.Name = "LayoutPageTraining";
		this.LayoutPageTraining.HasWindow = false;
		// Container child LayoutPageTraining.Gtk.Fixed+FixedChild
		this.LabelLearnRate = new global::Gtk.Label();
		this.LabelLearnRate.Name = "LabelLearnRate";
		this.LabelLearnRate.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Learning Rate (&#945;) x10<sup>-2</sup></b>");
		this.LabelLearnRate.UseMarkup = true;
		this.LayoutPageTraining.Add(this.LabelLearnRate);
		global::Gtk.Fixed.FixedChild w30 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageTraining[this.LabelLearnRate]));
		w30.X = 20;
		w30.Y = 20;
		// Container child LayoutPageTraining.Gtk.Fixed+FixedChild
		this.LearningRate = new global::Gtk.SpinButton(1D, 10000D, 1D);
		this.LearningRate.WidthRequest = 150;
		this.LearningRate.Name = "LearningRate";
		this.LearningRate.Adjustment.PageIncrement = 100D;
		this.LearningRate.ClimbRate = 1D;
		this.LearningRate.Numeric = true;
		this.LearningRate.Value = 200D;
		this.LayoutPageTraining.Add(this.LearningRate);
		global::Gtk.Fixed.FixedChild w31 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageTraining[this.LearningRate]));
		w31.X = 20;
		w31.Y = 50;
		// Container child LayoutPageTraining.Gtk.Fixed+FixedChild
		this.LabelHiddenLayerNodes = new global::Gtk.Label();
		this.LabelHiddenLayerNodes.Name = "LabelHiddenLayerNodes";
		this.LabelHiddenLayerNodes.LabelProp = global::Mono.Unix.Catalog.GetString("<b># of Hidden Layer Nodes</b>");
		this.LabelHiddenLayerNodes.UseMarkup = true;
		this.LayoutPageTraining.Add(this.LabelHiddenLayerNodes);
		global::Gtk.Fixed.FixedChild w32 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageTraining[this.LabelHiddenLayerNodes]));
		w32.X = 20;
		w32.Y = 90;
		// Container child LayoutPageTraining.Gtk.Fixed+FixedChild
		this.HiddenLayerNodes = new global::Gtk.SpinButton(1D, 1000D, 1D);
		this.HiddenLayerNodes.WidthRequest = 150;
		this.HiddenLayerNodes.Name = "HiddenLayerNodes";
		this.HiddenLayerNodes.Adjustment.PageIncrement = 10D;
		this.HiddenLayerNodes.ClimbRate = 1D;
		this.HiddenLayerNodes.Numeric = true;
		this.HiddenLayerNodes.Value = 1D;
		this.LayoutPageTraining.Add(this.HiddenLayerNodes);
		global::Gtk.Fixed.FixedChild w33 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageTraining[this.HiddenLayerNodes]));
		w33.X = 20;
		w33.Y = 120;
		// Container child LayoutPageTraining.Gtk.Fixed+FixedChild
		this.LabelEpochs = new global::Gtk.Label();
		this.LabelEpochs.Name = "LabelEpochs";
		this.LabelEpochs.LabelProp = global::Mono.Unix.Catalog.GetString("<b># of Iterations (Epochs)</b>");
		this.LabelEpochs.UseMarkup = true;
		this.LayoutPageTraining.Add(this.LabelEpochs);
		global::Gtk.Fixed.FixedChild w34 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageTraining[this.LabelEpochs]));
		w34.X = 20;
		w34.Y = 160;
		// Container child LayoutPageTraining.Gtk.Fixed+FixedChild
		this.Epochs = new global::Gtk.SpinButton(100D, 1000000D, 1D);
		this.Epochs.WidthRequest = 150;
		this.Epochs.Name = "Epochs";
		this.Epochs.Adjustment.PageIncrement = 100D;
		this.Epochs.ClimbRate = 1D;
		this.Epochs.Numeric = true;
		this.Epochs.Value = 1000D;
		this.LayoutPageTraining.Add(this.Epochs);
		global::Gtk.Fixed.FixedChild w35 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageTraining[this.Epochs]));
		w35.X = 20;
		w35.Y = 190;
		// Container child LayoutPageTraining.Gtk.Fixed+FixedChild
		this.LabelTraining = new global::Gtk.Label();
		this.LabelTraining.Name = "LabelTraining";
		this.LabelTraining.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Train Network</b>");
		this.LabelTraining.UseMarkup = true;
		this.LayoutPageTraining.Add(this.LabelTraining);
		global::Gtk.Fixed.FixedChild w36 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageTraining[this.LabelTraining]));
		w36.X = 240;
		w36.Y = 20;
		// Container child LayoutPageTraining.Gtk.Fixed+FixedChild
		this.TrainingProgress = new global::Gtk.ProgressBar();
		this.TrainingProgress.WidthRequest = 180;
		this.TrainingProgress.HeightRequest = 30;
		this.TrainingProgress.Name = "TrainingProgress";
		this.LayoutPageTraining.Add(this.TrainingProgress);
		global::Gtk.Fixed.FixedChild w37 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageTraining[this.TrainingProgress]));
		w37.X = 240;
		w37.Y = 50;
		// Container child LayoutPageTraining.Gtk.Fixed+FixedChild
		this.UIManager.AddUiFromString("<ui><toolbar name=\'TrainingToolbar\'><toolitem name=\'StartButton\' action=\'StartBut" +
				"ton\'/><toolitem name=\'StopButton\' action=\'StopButton\'/><toolitem name=\'ResetButt" +
				"on\' action=\'ResetButton\'/></toolbar></ui>");
		this.TrainingToolbar = ((global::Gtk.Toolbar)(this.UIManager.GetWidget("/TrainingToolbar")));
		this.TrainingToolbar.Name = "TrainingToolbar";
		this.TrainingToolbar.ShowArrow = false;
		this.TrainingToolbar.ToolbarStyle = ((global::Gtk.ToolbarStyle)(0));
		this.LayoutPageTraining.Add(this.TrainingToolbar);
		global::Gtk.Fixed.FixedChild w38 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageTraining[this.TrainingToolbar]));
		w38.X = 240;
		w38.Y = 90;
		// Container child LayoutPageTraining.Gtk.Fixed+FixedChild
		this.LabelClassification = new global::Gtk.Label();
		this.LabelClassification.Name = "LabelClassification";
		this.LabelClassification.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Classification</b>");
		this.LabelClassification.UseMarkup = true;
		this.LayoutPageTraining.Add(this.LabelClassification);
		global::Gtk.Fixed.FixedChild w39 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageTraining[this.LabelClassification]));
		w39.X = 450;
		w39.Y = 230;
		// Container child LayoutPageTraining.Gtk.Fixed+FixedChild
		this.ClassificationWindow = new global::Gtk.ScrolledWindow();
		this.ClassificationWindow.WidthRequest = 240;
		this.ClassificationWindow.HeightRequest = 140;
		this.ClassificationWindow.Name = "ClassificationWindow";
		this.ClassificationWindow.ShadowType = ((global::Gtk.ShadowType)(1));
		// Container child ClassificationWindow.Gtk.Container+ContainerChild
		this.Classification = new global::Gtk.TextView();
		this.Classification.WidthRequest = 0;
		this.Classification.HeightRequest = 0;
		this.Classification.CanFocus = true;
		this.Classification.Name = "Classification";
		this.Classification.Editable = false;
		this.ClassificationWindow.Add(this.Classification);
		this.LayoutPageTraining.Add(this.ClassificationWindow);
		global::Gtk.Fixed.FixedChild w41 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageTraining[this.ClassificationWindow]));
		w41.X = 450;
		w41.Y = 260;
		// Container child LayoutPageTraining.Gtk.Fixed+FixedChild
		this.LabelTolerance = new global::Gtk.Label();
		this.LabelTolerance.Name = "LabelTolerance";
		this.LabelTolerance.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Tolerance x10<sup>-5</sup></b>");
		this.LabelTolerance.UseMarkup = true;
		this.LayoutPageTraining.Add(this.LabelTolerance);
		global::Gtk.Fixed.FixedChild w42 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageTraining[this.LabelTolerance]));
		w42.X = 240;
		w42.Y = 160;
		// Container child LayoutPageTraining.Gtk.Fixed+FixedChild
		this.Tolerance = new global::Gtk.SpinButton(1D, 10000D, 1D);
		this.Tolerance.WidthRequest = 180;
		this.Tolerance.Name = "Tolerance";
		this.Tolerance.Adjustment.PageIncrement = 100D;
		this.Tolerance.ClimbRate = 1D;
		this.Tolerance.Numeric = true;
		this.Tolerance.Value = 1D;
		this.LayoutPageTraining.Add(this.Tolerance);
		global::Gtk.Fixed.FixedChild w43 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageTraining[this.Tolerance]));
		w43.X = 240;
		w43.Y = 190;
		// Container child LayoutPageTraining.Gtk.Fixed+FixedChild
		this.LabelIterations = new global::Gtk.Label();
		this.LabelIterations.Name = "LabelIterations";
		this.LabelIterations.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Iterations</b>");
		this.LabelIterations.UseMarkup = true;
		this.LayoutPageTraining.Add(this.LabelIterations);
		global::Gtk.Fixed.FixedChild w44 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageTraining[this.LabelIterations]));
		w44.X = 450;
		w44.Y = 90;
		// Container child LayoutPageTraining.Gtk.Fixed+FixedChild
		this.Iterations = new global::Gtk.Entry();
		this.Iterations.WidthRequest = 150;
		this.Iterations.Name = "Iterations";
		this.Iterations.IsEditable = false;
		this.Iterations.InvisibleChar = 'â€¢';
		this.LayoutPageTraining.Add(this.Iterations);
		global::Gtk.Fixed.FixedChild w45 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageTraining[this.Iterations]));
		w45.X = 450;
		w45.Y = 120;
		// Container child LayoutPageTraining.Gtk.Fixed+FixedChild
		this.LabelErrorCost = new global::Gtk.Label();
		this.LabelErrorCost.Name = "LabelErrorCost";
		this.LabelErrorCost.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Error/Cost function</b>");
		this.LabelErrorCost.UseMarkup = true;
		this.LayoutPageTraining.Add(this.LabelErrorCost);
		global::Gtk.Fixed.FixedChild w46 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageTraining[this.LabelErrorCost]));
		w46.X = 450;
		w46.Y = 20;
		// Container child LayoutPageTraining.Gtk.Fixed+FixedChild
		this.ErrorCost = new global::Gtk.Entry();
		this.ErrorCost.WidthRequest = 150;
		this.ErrorCost.Name = "ErrorCost";
		this.ErrorCost.IsEditable = false;
		this.ErrorCost.InvisibleChar = 'â€¢';
		this.LayoutPageTraining.Add(this.ErrorCost);
		global::Gtk.Fixed.FixedChild w47 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageTraining[this.ErrorCost]));
		w47.X = 450;
		w47.Y = 50;
		// Container child LayoutPageTraining.Gtk.Fixed+FixedChild
		this.UIManager.AddUiFromString("<ui><toolbar name=\'ClassifyToolbar\'><toolitem name=\'ClassifyButton\' action=\'Class" +
				"ifyButton\'/></toolbar></ui>");
		this.ClassifyToolbar = ((global::Gtk.Toolbar)(this.UIManager.GetWidget("/ClassifyToolbar")));
		this.ClassifyToolbar.Name = "ClassifyToolbar";
		this.ClassifyToolbar.ShowArrow = false;
		this.ClassifyToolbar.ToolbarStyle = ((global::Gtk.ToolbarStyle)(0));
		this.LayoutPageTraining.Add(this.ClassifyToolbar);
		global::Gtk.Fixed.FixedChild w48 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageTraining[this.ClassifyToolbar]));
		w48.X = 20;
		w48.Y = 410;
		// Container child LayoutPageTraining.Gtk.Fixed+FixedChild
		this.LabelThreshold = new global::Gtk.Label();
		this.LabelThreshold.Name = "LabelThreshold";
		this.LabelThreshold.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Classification Threshold</b>");
		this.LabelThreshold.UseMarkup = true;
		this.LayoutPageTraining.Add(this.LabelThreshold);
		global::Gtk.Fixed.FixedChild w49 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageTraining[this.LabelThreshold]));
		w49.X = 453;
		w49.Y = 162;
		// Container child LayoutPageTraining.Gtk.Fixed+FixedChild
		this.Threshold = new global::Gtk.SpinButton(1D, 100D, 1D);
		this.Threshold.WidthRequest = 150;
		this.Threshold.CanFocus = true;
		this.Threshold.Name = "Threshold";
		this.Threshold.Adjustment.PageIncrement = 1D;
		this.Threshold.ClimbRate = 1D;
		this.Threshold.Numeric = true;
		this.Threshold.Value = 50D;
		this.LayoutPageTraining.Add(this.Threshold);
		global::Gtk.Fixed.FixedChild w50 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageTraining[this.Threshold]));
		w50.X = 450;
		w50.Y = 190;
		// Container child LayoutPageTraining.Gtk.Fixed+FixedChild
		this.LabelClassify = new global::Gtk.Label();
		this.LabelClassify.Name = "LabelClassify";
		this.LabelClassify.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Classify</b>");
		this.LabelClassify.UseMarkup = true;
		this.LayoutPageTraining.Add(this.LabelClassify);
		global::Gtk.Fixed.FixedChild w51 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageTraining[this.LabelClassify]));
		w51.X = 70;
		w51.Y = 420;
		// Container child LayoutPageTraining.Gtk.Fixed+FixedChild
		this.UseOptimizer = new global::Gtk.CheckButton();
		this.UseOptimizer.Name = "UseOptimizer";
		this.UseOptimizer.Label = global::Mono.Unix.Catalog.GetString("Use Optimizer");
		this.UseOptimizer.DrawIndicator = true;
		this.UseOptimizer.UseUnderline = true;
		this.UseOptimizer.FocusOnClick = false;
		this.LayoutPageTraining.Add(this.UseOptimizer);
		global::Gtk.Fixed.FixedChild w52 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageTraining[this.UseOptimizer]));
		w52.X = 450;
		w52.Y = 420;
		this.MainNotebook.Add(this.LayoutPageTraining);
		global::Gtk.Notebook.NotebookChild w53 = ((global::Gtk.Notebook.NotebookChild)(this.MainNotebook[this.LayoutPageTraining]));
		w53.Position = 1;
		// Notebook tab
		this.LabelPageTraining = new global::Gtk.Label();
		this.LabelPageTraining.Name = "LabelPageTraining";
		this.LabelPageTraining.LabelProp = global::Mono.Unix.Catalog.GetString("Training");
		this.MainNotebook.SetTabLabel(this.LayoutPageTraining, this.LabelPageTraining);
		this.LabelPageTraining.ShowAll();
		// Container child MainNotebook.Gtk.Notebook+NotebookChild
		this.LayoutPageNetwork = new global::Gtk.Fixed();
		this.LayoutPageNetwork.Name = "LayoutPageNetwork";
		this.LayoutPageNetwork.HasWindow = false;
		// Container child LayoutPageNetwork.Gtk.Fixed+FixedChild
		this.LabelWJI = new global::Gtk.Label();
		this.LabelWJI.Name = "LabelWJI";
		this.LabelWJI.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Input Layer Weights</b>");
		this.LabelWJI.UseMarkup = true;
		this.LayoutPageNetwork.Add(this.LabelWJI);
		global::Gtk.Fixed.FixedChild w54 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageNetwork[this.LabelWJI]));
		w54.X = 20;
		w54.Y = 20;
		// Container child LayoutPageNetwork.Gtk.Fixed+FixedChild
		this.WJIWindow = new global::Gtk.ScrolledWindow();
		this.WJIWindow.WidthRequest = 300;
		this.WJIWindow.HeightRequest = 140;
		this.WJIWindow.Name = "WJIWindow";
		this.WJIWindow.ShadowType = ((global::Gtk.ShadowType)(1));
		// Container child WJIWindow.Gtk.Container+ContainerChild
		this.WJIView = new global::Gtk.TextView();
		this.WJIView.CanFocus = true;
		this.WJIView.Name = "WJIView";
		this.WJIView.Editable = false;
		this.WJIWindow.Add(this.WJIView);
		this.LayoutPageNetwork.Add(this.WJIWindow);
		global::Gtk.Fixed.FixedChild w56 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageNetwork[this.WJIWindow]));
		w56.X = 20;
		w56.Y = 80;
		// Container child LayoutPageNetwork.Gtk.Fixed+FixedChild
		this.WJIFile = new global::Gtk.Entry();
		this.WJIFile.WidthRequest = 230;
		this.WJIFile.Name = "WJIFile";
		this.WJIFile.IsEditable = true;
		this.WJIFile.InvisibleChar = 'â€¢';
		this.LayoutPageNetwork.Add(this.WJIFile);
		global::Gtk.Fixed.FixedChild w57 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageNetwork[this.WJIFile]));
		w57.X = 20;
		w57.Y = 40;
		// Container child LayoutPageNetwork.Gtk.Fixed+FixedChild
		this.OpenWJIButton = new global::Gtk.Button();
		this.OpenWJIButton.Name = "OpenWJIButton";
		this.OpenWJIButton.FocusOnClick = false;
		global::Gtk.Image w58 = new global::Gtk.Image();
		w58.Pixbuf = global::Stetic.IconLoader.LoadIcon(this, "gtk-open", global::Gtk.IconSize.Menu);
		this.OpenWJIButton.Image = w58;
		this.LayoutPageNetwork.Add(this.OpenWJIButton);
		global::Gtk.Fixed.FixedChild w59 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageNetwork[this.OpenWJIButton]));
		w59.X = 260;
		w59.Y = 40;
		// Container child LayoutPageNetwork.Gtk.Fixed+FixedChild
		this.SaveWJIButton = new global::Gtk.Button();
		this.SaveWJIButton.Name = "SaveWJIButton";
		this.SaveWJIButton.FocusOnClick = false;
		global::Gtk.Image w60 = new global::Gtk.Image();
		w60.Pixbuf = global::Stetic.IconLoader.LoadIcon(this, "gtk-save", global::Gtk.IconSize.Menu);
		this.SaveWJIButton.Image = w60;
		this.LayoutPageNetwork.Add(this.SaveWJIButton);
		global::Gtk.Fixed.FixedChild w61 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageNetwork[this.SaveWJIButton]));
		w61.X = 290;
		w61.Y = 40;
		// Container child LayoutPageNetwork.Gtk.Fixed+FixedChild
		this.WKJWindow = new global::Gtk.ScrolledWindow();
		this.WKJWindow.WidthRequest = 300;
		this.WKJWindow.HeightRequest = 140;
		this.WKJWindow.Name = "WKJWindow";
		this.WKJWindow.ShadowType = ((global::Gtk.ShadowType)(1));
		// Container child WKJWindow.Gtk.Container+ContainerChild
		this.WKJView = new global::Gtk.TextView();
		this.WKJView.CanFocus = true;
		this.WKJView.Name = "WKJView";
		this.WKJView.Editable = false;
		this.WKJWindow.Add(this.WKJView);
		this.LayoutPageNetwork.Add(this.WKJWindow);
		global::Gtk.Fixed.FixedChild w63 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageNetwork[this.WKJWindow]));
		w63.X = 370;
		w63.Y = 80;
		// Container child LayoutPageNetwork.Gtk.Fixed+FixedChild
		this.WKJFile = new global::Gtk.Entry();
		this.WKJFile.WidthRequest = 230;
		this.WKJFile.Name = "WKJFile";
		this.WKJFile.IsEditable = true;
		this.WKJFile.InvisibleChar = 'â€¢';
		this.LayoutPageNetwork.Add(this.WKJFile);
		global::Gtk.Fixed.FixedChild w64 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageNetwork[this.WKJFile]));
		w64.X = 370;
		w64.Y = 40;
		// Container child LayoutPageNetwork.Gtk.Fixed+FixedChild
		this.OpenWKJButton = new global::Gtk.Button();
		this.OpenWKJButton.Name = "OpenWKJButton";
		this.OpenWKJButton.FocusOnClick = false;
		global::Gtk.Image w65 = new global::Gtk.Image();
		w65.Pixbuf = global::Stetic.IconLoader.LoadIcon(this, "gtk-open", global::Gtk.IconSize.Menu);
		this.OpenWKJButton.Image = w65;
		this.LayoutPageNetwork.Add(this.OpenWKJButton);
		global::Gtk.Fixed.FixedChild w66 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageNetwork[this.OpenWKJButton]));
		w66.X = 610;
		w66.Y = 40;
		// Container child LayoutPageNetwork.Gtk.Fixed+FixedChild
		this.SaveWKJButton = new global::Gtk.Button();
		this.SaveWKJButton.Name = "SaveWKJButton";
		this.SaveWKJButton.FocusOnClick = false;
		global::Gtk.Image w67 = new global::Gtk.Image();
		w67.Pixbuf = global::Stetic.IconLoader.LoadIcon(this, "gtk-save", global::Gtk.IconSize.Menu);
		this.SaveWKJButton.Image = w67;
		this.LayoutPageNetwork.Add(this.SaveWKJButton);
		global::Gtk.Fixed.FixedChild w68 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageNetwork[this.SaveWKJButton]));
		w68.X = 640;
		w68.Y = 40;
		// Container child LayoutPageNetwork.Gtk.Fixed+FixedChild
		this.LabelWKJ = new global::Gtk.Label();
		this.LabelWKJ.Name = "LabelWKJ";
		this.LabelWKJ.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Hidden Layer Nodes</b>");
		this.LabelWKJ.UseMarkup = true;
		this.LayoutPageNetwork.Add(this.LabelWKJ);
		global::Gtk.Fixed.FixedChild w69 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageNetwork[this.LabelWKJ]));
		w69.X = 370;
		w69.Y = 20;
		// Container child LayoutPageNetwork.Gtk.Fixed+FixedChild
		this.UIManager.AddUiFromString("<ui><toolbar name=\'LoadNetworkToolbar\'><toolitem name=\'LoadNetworkButton\' action=" +
				"\'LoadNetworkButton\'/></toolbar></ui>");
		this.LoadNetworkToolbar = ((global::Gtk.Toolbar)(this.UIManager.GetWidget("/LoadNetworkToolbar")));
		this.LoadNetworkToolbar.Name = "LoadNetworkToolbar";
		this.LoadNetworkToolbar.ShowArrow = false;
		this.LoadNetworkToolbar.ToolbarStyle = ((global::Gtk.ToolbarStyle)(0));
		this.LayoutPageNetwork.Add(this.LoadNetworkToolbar);
		global::Gtk.Fixed.FixedChild w70 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageNetwork[this.LoadNetworkToolbar]));
		w70.X = 20;
		w70.Y = 410;
		// Container child LayoutPageNetwork.Gtk.Fixed+FixedChild
		this.LabelLoadNetwork = new global::Gtk.Label();
		this.LabelLoadNetwork.Name = "LabelLoadNetwork";
		this.LabelLoadNetwork.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Load weights into network</b>");
		this.LabelLoadNetwork.UseMarkup = true;
		this.LayoutPageNetwork.Add(this.LabelLoadNetwork);
		global::Gtk.Fixed.FixedChild w71 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageNetwork[this.LabelLoadNetwork]));
		w71.X = 70;
		w71.Y = 420;
		// Container child LayoutPageNetwork.Gtk.Fixed+FixedChild
		this.LabelNormalization = new global::Gtk.Label();
		this.LabelNormalization.Name = "LabelNormalization";
		this.LabelNormalization.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Normalization</b>");
		this.LabelNormalization.UseMarkup = true;
		this.LayoutPageNetwork.Add(this.LabelNormalization);
		global::Gtk.Fixed.FixedChild w72 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageNetwork[this.LabelNormalization]));
		w72.X = 20;
		w72.Y = 233;
		// Container child LayoutPageNetwork.Gtk.Fixed+FixedChild
		this.NormalizationFile = new global::Gtk.Entry();
		this.NormalizationFile.WidthRequest = 230;
		this.NormalizationFile.CanFocus = true;
		this.NormalizationFile.Name = "NormalizationFile";
		this.NormalizationFile.IsEditable = true;
		this.NormalizationFile.InvisibleChar = 'â€¢';
		this.LayoutPageNetwork.Add(this.NormalizationFile);
		global::Gtk.Fixed.FixedChild w73 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageNetwork[this.NormalizationFile]));
		w73.X = 20;
		w73.Y = 250;
		// Container child LayoutPageNetwork.Gtk.Fixed+FixedChild
		this.NormalizationWindow = new global::Gtk.ScrolledWindow();
		this.NormalizationWindow.WidthRequest = 300;
		this.NormalizationWindow.HeightRequest = 80;
		this.NormalizationWindow.Name = "NormalizationWindow";
		this.NormalizationWindow.ShadowType = ((global::Gtk.ShadowType)(1));
		// Container child NormalizationWindow.Gtk.Container+ContainerChild
		this.Normalization = new global::Gtk.TextView();
		this.Normalization.CanFocus = true;
		this.Normalization.Name = "Normalization";
		this.Normalization.Editable = false;
		this.NormalizationWindow.Add(this.Normalization);
		this.LayoutPageNetwork.Add(this.NormalizationWindow);
		global::Gtk.Fixed.FixedChild w75 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageNetwork[this.NormalizationWindow]));
		w75.X = 21;
		w75.Y = 285;
		// Container child LayoutPageNetwork.Gtk.Fixed+FixedChild
		this.OpenNormalization = new global::Gtk.Button();
		this.OpenNormalization.Name = "OpenNormalization";
		this.OpenNormalization.FocusOnClick = false;
		global::Gtk.Image w76 = new global::Gtk.Image();
		w76.Pixbuf = global::Stetic.IconLoader.LoadIcon(this, "gtk-open", global::Gtk.IconSize.Menu);
		this.OpenNormalization.Image = w76;
		this.LayoutPageNetwork.Add(this.OpenNormalization);
		global::Gtk.Fixed.FixedChild w77 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageNetwork[this.OpenNormalization]));
		w77.X = 260;
		w77.Y = 250;
		// Container child LayoutPageNetwork.Gtk.Fixed+FixedChild
		this.SaveNormalization = new global::Gtk.Button();
		this.SaveNormalization.Name = "SaveNormalization";
		this.SaveNormalization.FocusOnClick = false;
		global::Gtk.Image w78 = new global::Gtk.Image();
		w78.Pixbuf = global::Stetic.IconLoader.LoadIcon(this, "gtk-save", global::Gtk.IconSize.Menu);
		this.SaveNormalization.Image = w78;
		this.LayoutPageNetwork.Add(this.SaveNormalization);
		global::Gtk.Fixed.FixedChild w79 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageNetwork[this.SaveNormalization]));
		w79.X = 290;
		w79.Y = 250;
		this.MainNotebook.Add(this.LayoutPageNetwork);
		global::Gtk.Notebook.NotebookChild w80 = ((global::Gtk.Notebook.NotebookChild)(this.MainNotebook[this.LayoutPageNetwork]));
		w80.Position = 2;
		// Notebook tab
		this.LabelPageNetwork = new global::Gtk.Label();
		this.LabelPageNetwork.Name = "LabelPageNetwork";
		this.LabelPageNetwork.LabelProp = global::Mono.Unix.Catalog.GetString("Network");
		this.MainNotebook.SetTabLabel(this.LayoutPageNetwork, this.LabelPageNetwork);
		this.LabelPageNetwork.ShowAll();
		// Container child MainNotebook.Gtk.Notebook+NotebookChild
		this.LayoutPagePlot = new global::Gtk.Fixed();
		this.LayoutPagePlot.Name = "LayoutPagePlot";
		this.LayoutPagePlot.HasWindow = false;
		// Container child LayoutPagePlot.Gtk.Fixed+FixedChild
		this.PlotImage = new global::Gtk.Image();
		this.PlotImage.WidthRequest = 400;
		this.PlotImage.HeightRequest = 400;
		this.PlotImage.Name = "PlotImage";
		this.LayoutPagePlot.Add(this.PlotImage);
		global::Gtk.Fixed.FixedChild w81 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPagePlot[this.PlotImage]));
		w81.X = 20;
		w81.Y = 20;
		// Container child LayoutPagePlot.Gtk.Fixed+FixedChild
		this.LabelPlotType = new global::Gtk.Label();
		this.LabelPlotType.Name = "LabelPlotType";
		this.LabelPlotType.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Plot type</b>");
		this.LabelPlotType.UseMarkup = true;
		this.LayoutPagePlot.Add(this.LabelPlotType);
		global::Gtk.Fixed.FixedChild w82 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPagePlot[this.LabelPlotType]));
		w82.X = 430;
		w82.Y = 20;
		// Container child LayoutPagePlot.Gtk.Fixed+FixedChild
		this.PlotType = global::Gtk.ComboBox.NewText();
		this.PlotType.WidthRequest = 240;
		this.PlotType.Name = "PlotType";
		this.LayoutPagePlot.Add(this.PlotType);
		global::Gtk.Fixed.FixedChild w83 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPagePlot[this.PlotType]));
		w83.X = 430;
		w83.Y = 50;
		// Container child LayoutPagePlot.Gtk.Fixed+FixedChild
		this.LabelX = new global::Gtk.Label();
		this.LabelX.Name = "LabelX";
		this.LabelX.LabelProp = global::Mono.Unix.Catalog.GetString("<b>X</b>");
		this.LabelX.UseMarkup = true;
		this.LayoutPagePlot.Add(this.LabelX);
		global::Gtk.Fixed.FixedChild w84 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPagePlot[this.LabelX]));
		w84.X = 430;
		w84.Y = 90;
		// Container child LayoutPagePlot.Gtk.Fixed+FixedChild
		this.Feature1 = new global::Gtk.SpinButton(0D, 100D, 1D);
		this.Feature1.WidthRequest = 100;
		this.Feature1.CanFocus = true;
		this.Feature1.Name = "Feature1";
		this.Feature1.Adjustment.PageIncrement = 10D;
		this.Feature1.ClimbRate = 1D;
		this.Feature1.Numeric = true;
		this.LayoutPagePlot.Add(this.Feature1);
		global::Gtk.Fixed.FixedChild w85 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPagePlot[this.Feature1]));
		w85.X = 430;
		w85.Y = 110;
		// Container child LayoutPagePlot.Gtk.Fixed+FixedChild
		this.LabelY = new global::Gtk.Label();
		this.LabelY.Name = "LabelY";
		this.LabelY.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Y</b>");
		this.LabelY.UseMarkup = true;
		this.LayoutPagePlot.Add(this.LabelY);
		global::Gtk.Fixed.FixedChild w86 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPagePlot[this.LabelY]));
		w86.X = 570;
		w86.Y = 90;
		// Container child LayoutPagePlot.Gtk.Fixed+FixedChild
		this.Feature2 = new global::Gtk.SpinButton(0D, 100D, 1D);
		this.Feature2.WidthRequest = 100;
		this.Feature2.CanFocus = true;
		this.Feature2.Name = "Feature2";
		this.Feature2.Adjustment.PageIncrement = 10D;
		this.Feature2.ClimbRate = 1D;
		this.Feature2.Numeric = true;
		this.Feature2.Value = 1D;
		this.LayoutPagePlot.Add(this.Feature2);
		global::Gtk.Fixed.FixedChild w87 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPagePlot[this.Feature2]));
		w87.X = 570;
		w87.Y = 110;
		// Container child LayoutPagePlot.Gtk.Fixed+FixedChild
		this.UIManager.AddUiFromString("<ui><toolbar name=\'PlotToolbar\'><toolitem name=\'PlotButton\' action=\'PlotButton\'/>" +
				"<toolitem name=\'SavePlotButton\' action=\'SavePlotButton\'/></toolbar></ui>");
		this.PlotToolbar = ((global::Gtk.Toolbar)(this.UIManager.GetWidget("/PlotToolbar")));
		this.PlotToolbar.Name = "PlotToolbar";
		this.PlotToolbar.ShowArrow = false;
		this.PlotToolbar.ToolbarStyle = ((global::Gtk.ToolbarStyle)(0));
		this.LayoutPagePlot.Add(this.PlotToolbar);
		global::Gtk.Fixed.FixedChild w88 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPagePlot[this.PlotToolbar]));
		w88.X = 430;
		w88.Y = 150;
		this.MainNotebook.Add(this.LayoutPagePlot);
		global::Gtk.Notebook.NotebookChild w89 = ((global::Gtk.Notebook.NotebookChild)(this.MainNotebook[this.LayoutPagePlot]));
		w89.Position = 3;
		// Notebook tab
		this.LabelPagePlot = new global::Gtk.Label();
		this.LabelPagePlot.Name = "LabelPagePlot";
		this.LabelPagePlot.LabelProp = global::Mono.Unix.Catalog.GetString("Plot");
		this.MainNotebook.SetTabLabel(this.LayoutPagePlot, this.LabelPagePlot);
		this.LabelPagePlot.ShowAll();
		// Container child MainNotebook.Gtk.Notebook+NotebookChild
		this.LayoutPageAbout = new global::Gtk.Fixed();
		this.LayoutPageAbout.Name = "LayoutPageAbout";
		this.LayoutPageAbout.HasWindow = false;
		// Container child LayoutPageAbout.Gtk.Fixed+FixedChild
		this.ANNArchitecture = new global::Gtk.Image();
		this.ANNArchitecture.Name = "ANNArchitecture";
		this.ANNArchitecture.Pixbuf = global::Gdk.Pixbuf.LoadFromResource("NeuralNetworkClassifier.ann.png");
		this.LayoutPageAbout.Add(this.ANNArchitecture);
		global::Gtk.Fixed.FixedChild w90 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageAbout[this.ANNArchitecture]));
		w90.X = 20;
		w90.Y = 20;
		// Container child LayoutPageAbout.Gtk.Fixed+FixedChild
		this.CreditsWindow = new global::Gtk.ScrolledWindow();
		this.CreditsWindow.WidthRequest = 220;
		this.CreditsWindow.HeightRequest = 110;
		this.CreditsWindow.Name = "CreditsWindow";
		this.CreditsWindow.ShadowType = ((global::Gtk.ShadowType)(1));
		// Container child CreditsWindow.Gtk.Container+ContainerChild
		this.Credits = new global::Gtk.TextView();
		this.Credits.Buffer.Text = global::Mono.Unix.Catalog.GetString(@"Icons made by Becris from www.flaticon.com is licensed by Creative Commons BY 3.0

Original fmincg (Optimizer) implementation by (C) Copyright 1999, 2000 & 2001, Carl Edward Rasmussen

C# implementation by Peter Sergio Larsen with minor modifications by Stephen Daedalus Separa (2018)  ");
		this.Credits.Name = "Credits";
		this.Credits.Editable = false;
		this.Credits.WrapMode = ((global::Gtk.WrapMode)(2));
		this.CreditsWindow.Add(this.Credits);
		this.LayoutPageAbout.Add(this.CreditsWindow);
		global::Gtk.Fixed.FixedChild w92 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageAbout[this.CreditsWindow]));
		w92.X = 480;
		w92.Y = 280;
		// Container child LayoutPageAbout.Gtk.Fixed+FixedChild
		this.LabelCredits = new global::Gtk.Label();
		this.LabelCredits.Name = "LabelCredits";
		this.LabelCredits.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Credits</b>");
		this.LabelCredits.UseMarkup = true;
		this.LayoutPageAbout.Add(this.LabelCredits);
		global::Gtk.Fixed.FixedChild w93 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageAbout[this.LabelCredits]));
		w93.X = 480;
		w93.Y = 250;
		// Container child LayoutPageAbout.Gtk.Fixed+FixedChild
		this.LabelAbout = new global::Gtk.Label();
		this.LabelAbout.Name = "LabelAbout";
		this.LabelAbout.LabelProp = global::Mono.Unix.Catalog.GetString("<b>Neural Network Classifier</b>");
		this.LabelAbout.UseMarkup = true;
		this.LayoutPageAbout.Add(this.LabelAbout);
		global::Gtk.Fixed.FixedChild w94 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageAbout[this.LabelAbout]));
		w94.X = 480;
		w94.Y = 20;
		// Container child LayoutPageAbout.Gtk.Fixed+FixedChild
		this.AboutWindow = new global::Gtk.ScrolledWindow();
		this.AboutWindow.WidthRequest = 220;
		this.AboutWindow.HeightRequest = 180;
		this.AboutWindow.Name = "AboutWindow";
		this.AboutWindow.ShadowType = ((global::Gtk.ShadowType)(1));
		// Container child AboutWindow.Gtk.Container+ContainerChild
		this.textview2 = new global::Gtk.TextView();
		this.textview2.Buffer.Text = global::Mono.Unix.Catalog.GetString(@"Neural Network Classifier (NNC) software utilizes a simple 3 layer artificial neural network (ANN) architecture composed of the input layer, hidden layer, and the output layer. The simplicity of the architecture implies that NNC may not qualify as 'Deep Learning' but unsurprisingly, it can be used to classify a wide range of data sets.

Two sets of weights are ""trained"":  1) connection strengths between the input and hidden layer nodes, and the 2) connection strengths  between the hidden layer and output layer. The bias nodes have a fixed value of 1.0.

Finally, NNC can perform multi-category classification and some data sets are included in the NNC bundle for testing purposes.

More data sets are available at:

P. FrÃ¤nti and S. Sieranoja
Applied Intelligence, 1-17, 2018
https://doi.org/10.1007/s10489-018-1238-7

http://cs.joensuu.fi/sipu/datasets/");
		this.textview2.Name = "textview2";
		this.textview2.Editable = false;
		this.textview2.WrapMode = ((global::Gtk.WrapMode)(2));
		this.AboutWindow.Add(this.textview2);
		this.LayoutPageAbout.Add(this.AboutWindow);
		global::Gtk.Fixed.FixedChild w96 = ((global::Gtk.Fixed.FixedChild)(this.LayoutPageAbout[this.AboutWindow]));
		w96.X = 480;
		w96.Y = 50;
		this.MainNotebook.Add(this.LayoutPageAbout);
		global::Gtk.Notebook.NotebookChild w97 = ((global::Gtk.Notebook.NotebookChild)(this.MainNotebook[this.LayoutPageAbout]));
		w97.Position = 4;
		// Notebook tab
		this.LabelPageAbout = new global::Gtk.Label();
		this.LabelPageAbout.Name = "LabelPageAbout";
		this.LabelPageAbout.LabelProp = global::Mono.Unix.Catalog.GetString("About");
		this.MainNotebook.SetTabLabel(this.LayoutPageAbout, this.LabelPageAbout);
		this.LabelPageAbout.ShowAll();
		this.MainLayout.Add(this.MainNotebook);
		global::Gtk.Fixed.FixedChild w98 = ((global::Gtk.Fixed.FixedChild)(this.MainLayout[this.MainNotebook]));
		w98.X = 40;
		w98.Y = 70;
		this.Add(this.MainLayout);
		if ((this.Child != null))
		{
			this.Child.ShowAll();
		}
		this.Show();
		this.DeleteEvent += new global::Gtk.DeleteEventHandler(this.OnDeleteEvent);
		this.AboutButton.Activated += new global::System.EventHandler(this.OnAboutButtonClicked);
		this.QuitButton.Activated += new global::System.EventHandler(this.OnQuitButtonClicked);
		this.StartButton.Activated += new global::System.EventHandler(this.OnStartButtonClicked);
		this.StopButton.Activated += new global::System.EventHandler(this.OnStopButtonClicked);
		this.ResetButton.Activated += new global::System.EventHandler(this.OnResetButtonClicked);
		this.ClassifyButton.Activated += new global::System.EventHandler(this.OnClassifyButtonClicked);
		this.LoadNetworkButton.Activated += new global::System.EventHandler(this.OnLoadNetworkButtonClicked);
		this.PlotButton.Activated += new global::System.EventHandler(this.OnPlotButtonClicked);
		this.SavePlotButton.Activated += new global::System.EventHandler(this.OnSavePlotButtonClicked);
		this.MainNotebook.SwitchPage += new global::Gtk.SwitchPageHandler(this.OnMainNotebookSwitchPage);
		this.OpenTrainingSet.Clicked += new global::System.EventHandler(this.OnOpenTrainingSetClicked);
		this.OpenTestSet.Clicked += new global::System.EventHandler(this.OnOpenTestSetClicked);
		this.ReloadTrainingSet.Clicked += new global::System.EventHandler(this.OnReloadTrainingSetClicked);
		this.ReloadTestSet.Clicked += new global::System.EventHandler(this.OnReloadTestSetClicked);
		this.OpenWJIButton.Clicked += new global::System.EventHandler(this.OnOpenWJIButtonClicked);
		this.SaveWJIButton.Clicked += new global::System.EventHandler(this.OnSaveWJIButtonClicked);
		this.OpenWKJButton.Clicked += new global::System.EventHandler(this.OnOpenWKJButtonClicked);
		this.SaveWKJButton.Clicked += new global::System.EventHandler(this.OnSaveWKJButtonClicked);
		this.OpenNormalization.Clicked += new global::System.EventHandler(this.OnOpenNormalizationClicked);
		this.SaveNormalization.Clicked += new global::System.EventHandler(this.OnSaveNormalizationClicked);
	}
}
